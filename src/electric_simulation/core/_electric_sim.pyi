class IGenerator:
    def generate(self, time: float) -> float: ...


class SinusoidalGenerator(IGenerator):
    def __init__(
        self, frequency: float, amplitude: float, phase: float = 0.0
    ) -> None: ...
    def calculateVoltage(self, time: float) -> float: ...


class SquareWaveGenerator(IGenerator):
    def __init__(self, frequency: float, amplitude: float) -> None: ...
    def calculateVoltage(self, time: float) -> float: ...


class CircuitRL:
    def __init__(
        self, resistance: float, inductance: float, current: float = 0.0
    ) -> None: ...
    def simulate(self, generator: IGenerator, t_end: float, dt: float) -> list[tuple[float, float, float]]: ...
