<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="square__wave__generator_8cpp" kind="file" language="C++">
    <compoundname>square_wave_generator.cpp</compoundname>
    <includes refid="square__wave__generator_8h" local="yes">../include/square_wave_generator.h</includes>
    <includes local="no">cmath</includes>
    <incdepgraph>
      <node id="4">
        <label>cmath</label>
      </node>
      <node id="1">
        <label>/home/kruksik/own_projects/ElectricCircuitSim/src/cpp/src/square_wave_generator.cpp</label>
        <link refid="square__wave__generator_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../include/square_wave_generator.h</label>
        <link refid="square__wave__generator_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>generator.h</label>
        <link refid="generator_8h"/>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;../include/square_wave_generator.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><ref refid="classSquareWaveGenerator_1a1774eec0228b65d46a95f4c9d00abaef" kindref="member">SquareWaveGenerator::SquareWaveGenerator</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amplitude,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frequency)</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>amplitude(amplitude),<sp/>frequency(frequency)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal">}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classSquareWaveGenerator_1afbb3f3478d1082a945ca02bd201823b2" kindref="member">SquareWaveGenerator::calculateVoltage</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="10"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>period<sp/>=<sp/>1.0<sp/>/<sp/>frequency;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fmod(time,<sp/>period)<sp/>&lt;<sp/>period<sp/>/<sp/>2)<sp/>?<sp/>amplitude<sp/>:<sp/>-amplitude;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/kruksik/own_projects/ElectricCircuitSim/src/cpp/src/square_wave_generator.cpp"/>
  </compounddef>
</doxygen>
